{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAgB,MAAM,mBAAmB,CAAC;AAC/D,OAAO,qBAAqB,MAAM,yBAAyB,CAAC;AAE5D,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC,qBAAqB,CAAC,CAAC;AAMxD,MAAM,UAAU,gBAAgB,CAC9B,QAA+C;IAE/C,OAAO,OAAO,CAAC,WAAW,CACxB,mBAAmB,EACnB,QAAQ,CACT,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,uBAAuB,CACrC,QAAgB,EAChB,QAAgB;IAEhB,OAAO,qBAAqB,CAAC,uBAAuB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AAC3E,CAAC","sourcesContent":["import { EventEmitter, Subscription } from \"expo-modules-core\";\nimport ReactNativeMQTTModule from \"./ReactNativeMqttModule\";\n\nconst emitter = new EventEmitter(ReactNativeMQTTModule);\n\nexport type MessageReceivedEvent = {\n  payload: string;\n};\n\nexport function addThemeListener(\n  listener: (event: MessageReceivedEvent) => void\n): Subscription {\n  return emitter.addListener<MessageReceivedEvent>(\n    \"onMessageReceived\",\n    listener\n  );\n}\n\nexport function createClientForEndpoint(\n  endPoint: String,\n  userName: String\n): boolean {\n  return ReactNativeMQTTModule.createClientForEndpoint(endPoint, userName);\n}\n"]}